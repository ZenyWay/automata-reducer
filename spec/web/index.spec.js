!function(){return function t(e,n,o){function i(c,u){if(!n[c]){if(!e[c]){var a="function"==typeof require&&require;if(!u&&a)return a(c,!0);if(r)return r(c,!0);var f=new Error("Cannot find module '"+c+"'");throw f.code="MODULE_NOT_FOUND",f}var s=n[c]={exports:{}};e[c][0].call(s.exports,function(t){return i(e[c][1][t]||t)},s,s.exports,t,e,n,o)}return n[c].exports}for(var r="function"==typeof require&&require,c=0;c<o.length;c++)i(o[c]);return i}}()({1:[function(t,e,n){"use strict";Object.defineProperty(n,"__esModule",{value:!0});const o={key:"state",toStandardAction:r,operator:r};function i(t){return"string"==typeof(t&&t.valueOf())}function r(t){return t}n.default=function t(e,n,r){if(i(r))return t(e,n,{key:r});const{key:c,toStandardAction:u,operator:a}=Object.assign({},o,r),f=function(t,e,n,o){const r=Object.keys(t).reduce(function(e,n){const o=t[n];return Object.keys(o).reduce(function(t,e){const i=[].concat(o[e]).map(c);return t[e]=Object.assign({},t[e],{[n]:i}),t},e)},{});return Object.keys(r).reduce(function(t,i){const c=r[i];return t[i]=o(function(t={},o={}){let i=t[n]?t:Object.assign({},t,{[n]:e});const r=c[i[n]]||[];let u=r.length;for(;u--;)i=r[u](i,o);return i}),t},{});function c(t){return i(t)?function(e){return e&&e[n]===t?e:Object.assign({},e,{[n]:t})}:t}}(e,n,c,a);return function(t,e){const{type:n}=u(e),o=f[n];return o?o(t,e):t}}},{}],2:[function(t,e,n){"use strict";const o=t(1).default;describe("createAutomataReducer:",function(){let t,e,n,i,r,c;beforeEach(function(){c=(r=function(t){return t.reduce(function(t,e){return t[e]=function(t){return{type:e,payload:t}},t},{})})(["IDLE","INCREMENT","RESET"]),n=jasmine.createSpy("increment"),i=jasmine.createSpy("reset"),t=o(e={init:{IDLE:"idle",INCREMENT:[n,"idle"]},idle:{RESET:["init",i],INCREMENT:n}},"init")}),it("returns a function.",function(){expect(t).toEqual(jasmine.any(Function))}),describe("the returned function:",function(){let r,u;beforeEach(function(){r=t(void 0,c.IDLE()),t(r,c.INCREMENT(42)),u=t(r,c.RESET())}),it("reduces automata state.",function(){expect(r).toEqual({state:"idle"})}),it("sequentially calls the specified reducers.",function(){expect(n).toHaveBeenCalledWith({state:"idle"},{type:"INCREMENT",payload:42}),expect(i).toHaveBeenCalledWith({state:"idle"},{type:"RESET",payload:void 0}),expect(u).toEqual({state:"init"})}),describe("when its factory was called with an optional `key` string argument:",function(){let n;beforeEach(function(){t=o(e,"init","foo"),n=t(void 0,c.IDLE())}),it("reduces automata state at that key in the state object",function(){expect(n).toEqual({foo:"idle"})})}),describe("when its factory was called with an optional `{ key: string }` object argument:",function(){let n;beforeEach(function(){t=o(e,"init",{key:"foo"}),n=t(void 0,c.IDLE())}),it("reduces automata state at that key in the state object",function(){expect(n).toEqual({foo:"idle"})})})})})},{1:1}]},{},[2]);